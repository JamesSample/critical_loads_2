# ReplicaSet deployment of PostgreSQL database
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: critial-loads-db
  # labels so that we can bind a Service to this Pod
  labels:
    app: critical-loads-db
spec:
  selector:
    matchLabels:
      app: critical-loads-db
  template:
    metadata:
      labels:
        app: critical-loads-db
    spec:
      containers:
      - name: critical-loads-db-container
        image: timescale/timescaledb-postgis:latest-pg10
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 1.7
            memory: 5Gi
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_DB
          value: critical_loads
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: critical-loads
              key: dbpassword
        - name: PGDATA
          value: /var/lib/postgresql/data/pg10 
        - name: POSTGIS_GDAL_ENABLED_DRIVERS
          value: ENABLE_ALL
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - postgres
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - postgres
          initialDelaySeconds: 5
          timeoutSeconds: 1
        ports:
        - containerPort: 5432
#        volumeMounts:
#          - name: crit-lds-data-storage
#            # /var/lib/postgresql/data is where PostgreSQL stores its databases
#            mountPath: "/var/lib/postgresql/data"